{"ast":null,"code":"import _slicedToArray from\"/home/mrrobot/React/Hostel-Management-master/server/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useState,useEffect}from\"react\";import{Form,Button,Row,Col}from\"react-bootstrap\";import{useDispatch,useSelector}from\"react-redux\";import Message from\"../components/message\";import Loader from\"../components/loader\";import{getUserDetails,updateUserProfile}from\"../actions/userActions\";import{USER_UPDATE_PROFILE_RESET}from\"../constants/userConstants\";var ProfileView=function ProfileView(_ref){var history=_ref.history;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),email=_useState4[0],setEmail=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),password=_useState6[0],setPassword=_useState6[1];var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),confirmPassword=_useState8[0],setConfirmPassword=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),message=_useState10[0],setMessage=_useState10[1];var dispatch=useDispatch();var userDetails=useSelector(function(state){return state.userDetails;});var loading=userDetails.loading,error=userDetails.error,user=userDetails.user;var userLogin=useSelector(function(state){return state.userLogin;});var userInfo=userLogin.userInfo;var userUpdateProfile=useSelector(function(state){return state.userUpdateProfile;});var success=userUpdateProfile.success;useEffect(function(){if(!userInfo){history.push(\"/login\");}else{if(!user||!user.name||success){dispatch({type:USER_UPDATE_PROFILE_RESET});dispatch(getUserDetails(\"profile\"));}else{setName(user.name);setEmail(user.email);}}},[dispatch,history,userInfo,user,success]);var submitHandler=function submitHandler(e){e.preventDefault();if(password!==confirmPassword){setMessage(\"Passwords do not match\");}else{dispatch(updateUserProfile({id:user._id,name:name,email:email,password:password}));}};return/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{md:3,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Profile\"}),message&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:message}),success&&/*#__PURE__*/_jsx(Message,{variant:\"success\",children:\"Profile Updated\"}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"password\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Enter password\",value:password,onChange:function onChange(e){return setPassword(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"confirmPassword\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Confirm Password\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"password\",placeholder:\"Confirm password\",value:confirmPassword,onChange:function onChange(e){return setConfirmPassword(e.target.value);}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})});};export default ProfileView;","map":{"version":3,"sources":["/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/profileView.jsx"],"names":["React","useState","useEffect","Form","Button","Row","Col","useDispatch","useSelector","Message","Loader","getUserDetails","updateUserProfile","USER_UPDATE_PROFILE_RESET","ProfileView","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userDetails","state","loading","error","user","userLogin","userInfo","userUpdateProfile","success","push","type","submitHandler","e","preventDefault","id","_id","target","value"],"mappings":"2QAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,CAA4BC,GAA5B,KAAuC,iBAAvC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAASC,cAAT,CAAyBC,iBAAzB,KAAkD,wBAAlD,CACA,OAASC,yBAAT,KAA0C,4BAA1C,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,eACXd,QAAQ,CAAC,EAAD,CADG,wCAC5Be,IAD4B,eACtBC,OADsB,8BAEThB,QAAQ,CAAC,EAAD,CAFC,yCAE5BiB,KAF4B,eAErBC,QAFqB,8BAGHlB,QAAQ,CAAC,EAAD,CAHL,yCAG5BmB,QAH4B,eAGlBC,WAHkB,8BAIWpB,QAAQ,CAAC,EAAD,CAJnB,yCAI5BqB,eAJ4B,eAIXC,kBAJW,8BAKLtB,QAAQ,CAAC,IAAD,CALH,0CAK5BuB,OAL4B,gBAKnBC,UALmB,gBAOnC,GAAMC,CAAAA,QAAQ,CAAGnB,WAAW,EAA5B,CAEA,GAAMoB,CAAAA,WAAW,CAAGnB,WAAW,CAAC,SAACoB,KAAD,QAAWA,CAAAA,KAAK,CAACD,WAAjB,EAAD,CAA/B,CATmC,GAU3BE,CAAAA,OAV2B,CAUFF,WAVE,CAU3BE,OAV2B,CAUlBC,KAVkB,CAUFH,WAVE,CAUlBG,KAVkB,CAUXC,IAVW,CAUFJ,WAVE,CAUXI,IAVW,CAYnC,GAAMC,CAAAA,SAAS,CAAGxB,WAAW,CAAC,SAACoB,KAAD,QAAWA,CAAAA,KAAK,CAACI,SAAjB,EAAD,CAA7B,CAZmC,GAa3BC,CAAAA,QAb2B,CAadD,SAbc,CAa3BC,QAb2B,CAenC,GAAMC,CAAAA,iBAAiB,CAAG1B,WAAW,CAAC,SAACoB,KAAD,QAAWA,CAAAA,KAAK,CAACM,iBAAjB,EAAD,CAArC,CAfmC,GAgB3BC,CAAAA,OAhB2B,CAgBfD,iBAhBe,CAgB3BC,OAhB2B,CAiBnCjC,SAAS,CAAC,UAAM,CACd,GAAI,CAAC+B,QAAL,CAAe,CACblB,OAAO,CAACqB,IAAR,CAAa,QAAb,EACD,CAFD,IAEO,CACL,GAAI,CAACL,IAAD,EAAS,CAACA,IAAI,CAACf,IAAf,EAAuBmB,OAA3B,CAAoC,CAClCT,QAAQ,CAAC,CAAEW,IAAI,CAAExB,yBAAR,CAAD,CAAR,CACAa,QAAQ,CAACf,cAAc,CAAC,SAAD,CAAf,CAAR,CACD,CAHD,IAGO,CACLM,OAAO,CAACc,IAAI,CAACf,IAAN,CAAP,CACAG,QAAQ,CAACY,IAAI,CAACb,KAAN,CAAR,CACD,CACF,CACF,CAZQ,CAYN,CAACQ,QAAD,CAAWX,OAAX,CAAoBkB,QAApB,CAA8BF,IAA9B,CAAoCI,OAApC,CAZM,CAAT,CAcA,GAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC3BA,CAAC,CAACC,cAAF,GACA,GAAIpB,QAAQ,GAAKE,eAAjB,CAAkC,CAChCG,UAAU,CAAC,wBAAD,CAAV,CACD,CAFD,IAEO,CACLC,QAAQ,CAACd,iBAAiB,CAAC,CAAE6B,EAAE,CAAEV,IAAI,CAACW,GAAX,CAAgB1B,IAAI,CAAJA,IAAhB,CAAsBE,KAAK,CAALA,KAAtB,CAA6BE,QAAQ,CAARA,QAA7B,CAAD,CAAlB,CAAR,CACD,CACF,CAPD,CASA,mBACE,KAAC,GAAD,wBACE,MAAC,GAAD,EAAK,EAAE,CAAE,CAAT,wBACE,+BADF,CAEGI,OAAO,eAAI,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,OAA3B,EAFd,CAIGW,OAAO,eAAI,KAAC,OAAD,EAAS,OAAO,CAAC,SAAjB,6BAJd,CAKGN,OAAO,cACN,KAAC,MAAD,IADM,CAEJC,KAAK,cACP,KAAC,OAAD,EAAS,OAAO,CAAC,QAAjB,UAA2BA,KAA3B,EADO,cAGP,MAAC,IAAD,EAAM,QAAQ,CAAEQ,aAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,MAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,mBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,MADP,CAEE,WAAW,CAAC,YAFd,CAGE,KAAK,CAAEtB,IAHT,CAIE,QAAQ,CAAE,kBAACuB,CAAD,QAAOtB,CAAAA,OAAO,CAACsB,CAAC,CAACI,MAAF,CAASC,KAAV,CAAd,EAJZ,EAFF,GADF,cAWE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,4BADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,OADP,CAEE,WAAW,CAAC,aAFd,CAGE,KAAK,CAAE1B,KAHT,CAIE,QAAQ,CAAE,kBAACqB,CAAD,QAAOpB,CAAAA,QAAQ,CAACoB,CAAC,CAACI,MAAF,CAASC,KAAV,CAAf,EAJZ,EAFF,GAXF,cAqBE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,UAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,uBADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,gBAFd,CAGE,KAAK,CAAExB,QAHT,CAIE,QAAQ,CAAE,kBAACmB,CAAD,QAAOlB,CAAAA,WAAW,CAACkB,CAAC,CAACI,MAAF,CAASC,KAAV,CAAlB,EAJZ,EAFF,GArBF,cA+BE,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,iBAAtB,wBACE,KAAC,IAAD,CAAM,KAAN,+BADF,cAEE,KAAC,IAAD,CAAM,OAAN,EACE,IAAI,CAAC,UADP,CAEE,WAAW,CAAC,kBAFd,CAGE,KAAK,CAAEtB,eAHT,CAIE,QAAQ,CAAE,kBAACiB,CAAD,QAAOhB,CAAAA,kBAAkB,CAACgB,CAAC,CAACI,MAAF,CAASC,KAAV,CAAzB,EAJZ,EAFF,GA/BF,cAyCE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,oBAzCF,GAVJ,GADF,EADF,CA8DD,CAtGD,CAwGA,cAAe9B,CAAAA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/message\";\nimport Loader from \"../components/loader\";\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\";\nimport { USER_UPDATE_PROFILE_RESET } from \"../constants/userConstants\";\n\nconst ProfileView = ({ history }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [message, setMessage] = useState(null);\n\n  const dispatch = useDispatch();\n\n  const userDetails = useSelector((state) => state.userDetails);\n  const { loading, error, user } = userDetails;\n\n  const userLogin = useSelector((state) => state.userLogin);\n  const { userInfo } = userLogin;\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/login\");\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\n        dispatch(getUserDetails(\"profile\"));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\n    }\n  };\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>Profile</h2>\n        {message && <Message variant=\"danger\">{message}</Message>}\n\n        {success && <Message variant=\"success\">Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant=\"danger\">{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"name\"\n                placeholder=\"Enter name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"password\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Enter password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"confirmPassword\">\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirm password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type=\"submit\" variant=\"primary\">\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      \n    </Row>\n  );\n};\n\nexport default ProfileView;\n"]},"metadata":{},"sourceType":"module"}