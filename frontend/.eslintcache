[{"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/reportWebVitals.js":"1","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/homeView.jsx":"2","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/attendanceView.jsx":"3","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/profileView.jsx":"4","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/header.jsx":"5","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/reducers/userReducers.jsx":"6","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/student.jsx":"7","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/analysisComponent.jsx":"8","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/studentTableView.jsx":"9","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/constants/userConstants.jsx":"10","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/attendanceTableComponent.jsx":"11","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/App.js":"12","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/Authentication Screens/LoginView.jsx":"13","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/Authentication Screens/RegisterView.jsx":"14","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/reducers/attendanceReducer.jsx":"15","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/actions/attendanceActions.jsx":"16","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/formContainer.jsx":"17","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/searchBox.jsx":"18"},{"size":362,"mtime":1612543842000,"results":"19","hashOfConfig":"20"},{"size":2760,"mtime":1612543842000,"results":"21","hashOfConfig":"20"},{"size":1116,"mtime":1612543842000,"results":"22","hashOfConfig":"20"},{"size":3635,"mtime":1612543842000,"results":"23","hashOfConfig":"20"},{"size":2549,"mtime":1622216205165,"results":"24","hashOfConfig":"20"},{"size":3520,"mtime":1612543842000,"results":"25","hashOfConfig":"20"},{"size":861,"mtime":1612543842000,"results":"26","hashOfConfig":"20"},{"size":2641,"mtime":1612543842000,"results":"27","hashOfConfig":"20"},{"size":2402,"mtime":1612543842000,"results":"28","hashOfConfig":"20"},{"size":1502,"mtime":1612543842000,"results":"29","hashOfConfig":"20"},{"size":3361,"mtime":1612543842000,"results":"30","hashOfConfig":"20"},{"size":2000,"mtime":1612543842000,"results":"31","hashOfConfig":"20"},{"size":2146,"mtime":1612543842000,"results":"32","hashOfConfig":"20"},{"size":3149,"mtime":1612543842000,"results":"33","hashOfConfig":"20"},{"size":1789,"mtime":1612543842000,"results":"34","hashOfConfig":"20"},{"size":2462,"mtime":1612543842000,"results":"35","hashOfConfig":"20"},{"size":331,"mtime":1612543842000,"results":"36","hashOfConfig":"20"},{"size":783,"mtime":1612543842000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"18wma4a",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/reportWebVitals.js",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/homeView.jsx",["78"],"import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Student from \"../components/student\";\nimport Loading from \"../components/loader.jsx\";\nimport Message from \"../components/message.jsx\";\nimport { listStudents } from \"../actions/studentActions\";\nimport Paginate from \"../components/paginate\";\nimport {\n  Row,\n  Col,\n  ButtonGroup,\n  ToggleButton,\n  Container,\n} from \"react-bootstrap\";\nimport StudentsTableView from \"./studentTableView\";\n\nconst HomeView = ({ match, history }) => {\n  const [isGrid, setIsGrid] = useState(true);\n  const keyword = match.params.keyword;\n\n  const pageNumber = match.params.pageNumber || 1;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading: userLoading, userInfo } = userLogin;\n\n  const dispatch = useDispatch();\n\n  const studentsList = useSelector((state) => state.studentsList);\n  const { loading, error, students, page, pages } = studentsList;\n\n  useEffect(() => {\n    if (!userLoading && !userInfo) {\n      history.push(\"/login\");\n    }\n    dispatch(listStudents(keyword, pageNumber));\n  }, [keyword, pageNumber]);\n\n  return (\n    <>\n      <>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col xs lg=\"2\"></Col>\n            <Col md=\"auto\">\n              <ButtonGroup toggle>\n                {[\"Grid\", \"Table\"].map((type) => (\n                  <ToggleButton\n                    key={type}\n                    type=\"radio\"\n                    variant=\"secondary\"\n                    name=\"radio\"\n                    value={type}\n                    checked={(isGrid ? \"Grid\" : \"Table\") === type}\n                    onChange={(e) =>\n                      setIsGrid(e.target.value === \"Grid\" ? true : false)\n                    }\n                  >\n                    {type === \"Grid\" ? <> Grid</> : <> Table </>}\n                  </ToggleButton>\n                ))}\n              </ButtonGroup>\n            </Col>\n            <Col xs lg=\"2\"></Col>\n          </Row>\n        </Container>\n      </>\n\n      <h1>Students</h1>\n      {loading ? (\n        <Loading />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : isGrid ? (\n        <>\n          <Row>\n            {students.map((student) => (\n              <Col key={student._id} sm={12} md={6} lg={4} xl={3}>\n                <Student stuentDetails={student} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : \"\"}\n          />\n        </>\n      ) : (\n        <>\n          <StudentsTableView keyword={keyword} pageNumber={pageNumber} />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default HomeView;\n",["79","80"],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/attendanceView.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/profileView.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/header.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/reducers/userReducers.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/student.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/analysisComponent.jsx",["81"],"import React, { useEffect, useState } from \"react\";\nimport { Table } from \"react-bootstrap\";\nimport { useSelector } from \"react-redux\";\nimport Loading from \"./loader\";\nimport Message from \"./message\";\nimport { CSVLink } from \"react-csv\";\n\nconst AnalysisComponent = () => {\n  const attendanceAnalysis = useSelector((state) => state.attendanceAnalysis);\n  const { loading, error, attendance } = attendanceAnalysis;\n  const [data, setData] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  useEffect(() => {\n    if (attendance) {\n      setHeaders([\n        { label: \"Name\", key: \"name\" },\n        { label: \"Contact\", key: \"contact\" },\n        { label: \"Room No\", key: \"roomNo\" },\n        { label: \"Status\", key: \"attendance\" },\n      ]);\n      var csvMapList = [];\n      Object.entries(attendance.details).map((student) => {\n        var csvMap = {};\n        csvMap[\"name\"] = student[1].name;\n        csvMap[\"contact\"] = student[1].contact;\n        csvMap[\"roomNo\"] = student[1].roomNo;\n        csvMap[\"attendance\"] = attendance.data[student[0]];\n        csvMapList.push(csvMap);\n      });\n\n      setData(csvMapList);\n    }\n  }, [attendance]);\n  return (\n    <>\n      {error && <Message variant=\"danger\">{error}</Message>}\n      {loading ? (\n        <Loading />\n      ) : (\n        <>\n          {attendance && (\n            <>\n              <Table striped bordered hover responsive className=\"table-sm\">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Contact No</th>\n                    <th>Room No</th>\n                    <th>Attendance</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {attendance &&\n                    Object.entries(attendance.details).map((student) => {\n                      return (\n                        <tr key={student[0]}>\n                          <th>{student[1].name}</th>\n                          <td>{student[1].contact}</td>\n                          <td>{student[1].roomNo}</td>\n                          <td>{attendance.data[student[0]]}</td>\n                        </tr>\n                      );\n                    })}\n                </tbody>\n              </Table>\n              <CSVLink\n                data={data}\n                headers={headers}\n                filename={`attendance_${Date()\n                  .toString()\n                  .substring(0, 15)}.csv`}\n                className=\"btn btn-primary\"\n              >\n                Download\n              </CSVLink>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default AnalysisComponent;\n","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/studentTableView.jsx",["82"],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/constants/userConstants.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/attendanceTableComponent.jsx",["83"],"import React, { useEffect } from \"react\";\nimport { Table, Form, Button } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { postAttendance } from \"../actions/attendanceActions\";\nimport { Link } from \"react-router-dom\";\nconst AttendanceTableComponent = ({\n  students,\n  attendanceMap,\n  setAttendanceMap,\n  attendance,\n  roomNo,\n}) => {\n  const dispatch = useDispatch();\n  useEffect(() => {}, [dispatch, attendanceMap]);\n  const updateAttendance = () => {\n    if (attendance) {\n      if (!attendance.roomNo.includes(roomNo)) {\n        attendance.roomNo.push(roomNo);\n      }\n    }\n    const roomData = attendance ? attendance.roomNo : roomNo;\n    const dataData = attendanceMap;\n    const detailsData = attendance ? attendance.details : {};\n    students.map((student) => {\n      detailsData[student._id] = {\n        name: student.name,\n        contact: student.contact,\n        roomNo: student.roomNo,\n      };\n    });\n\n    dispatch(\n      postAttendance({\n        roomNo: roomData,\n        details: detailsData,\n        data: dataData,\n      })\n    );\n  };\n  return (\n    <>\n      <Table striped bordered hover responsive className=\"table-sm\">\n        <thead>\n          <tr>\n            <th>NAME</th>\n            <th>Attendance</th>\n            <th>STATUS</th>\n            <th>CONTACT</th>\n            <th>CITY</th>\n          </tr>\n        </thead>\n        <tbody>\n          {students &&\n            students.map((student) => (\n              <>\n                <tr key={student._id}>\n                  <td>\n                    <Link to={`/student/${student._id}`}>{student.name}</Link>\n                  </td>\n                  <td>\n                    <Form>\n                      <Form.Group controlId=\"status\">\n                        <Form.Control\n                          as=\"select\"\n                          size=\"sm\"\n                          defaultValue={attendanceMap[student._id]}\n                          onChange={(e) => {\n                            var tempMap = attendanceMap;\n                            tempMap[student._id] = e.target.value;\n                            setAttendanceMap(tempMap);\n                          }}\n                        >\n                          <option>Hostel</option>\n                          <option>Home</option>\n                          <option>outside</option>\n                        </Form.Control>\n                      </Form.Group>\n                    </Form>\n                  </td>\n                  <td>\n                    <span\n                      style={{\n                        color:\n                          student.status === \"Outside\"\n                            ? \"red\"\n                            : student.status === \"Home\"\n                            ? \"blue\"\n                            : \"black\",\n                      }}\n                    >\n                      {student.status}\n                    </span>\n                  </td>\n                  <td>\n                    <a href={`tel:${student.contact}`}>{student.contact}</a>\n                  </td>\n                  <td>{student.city}</td>\n                </tr>\n              </>\n            ))}\n        </tbody>\n      </Table>\n      <Button variant=\"success\" onClick={updateAttendance}>\n        Update Attendance\n      </Button>\n    </>\n  );\n};\n\nexport default AttendanceTableComponent;\n","/home/mrrobot/React/Hostel-Management-master/server/frontend/src/App.js",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/Authentication Screens/LoginView.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/screens/Authentication Screens/RegisterView.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/reducers/attendanceReducer.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/actions/attendanceActions.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/formContainer.jsx",[],"/home/mrrobot/React/Hostel-Management-master/server/frontend/src/components/searchBox.jsx",[],{"ruleId":"84","severity":1,"message":"85","line":35,"column":6,"nodeType":"86","endLine":35,"endColumn":27,"suggestions":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":22,"column":56,"nodeType":"94","messageId":"95","endLine":22,"endColumn":58},{"ruleId":"84","severity":1,"message":"96","line":19,"column":6,"nodeType":"86","endLine":19,"endColumn":37,"suggestions":"97"},{"ruleId":"92","severity":1,"message":"93","line":24,"column":28,"nodeType":"94","messageId":"95","endLine":24,"endColumn":30},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'userInfo', and 'userLoading'. Either include them or remove the dependency array.","ArrayExpression",["98"],"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'students'. Either include it or remove the dependency array.",["101"],{"desc":"102","fix":"103"},"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [dispatch, history, keyword, pageNumber, userInfo, userLoading]",{"range":"106","text":"107"},"Update the dependencies array to be: [dispatch, keyword, pageNumber, students]",{"range":"108","text":"109"},[1116,1137],"[dispatch, history, keyword, pageNumber, userInfo, userLoading]",[702,733],"[dispatch, keyword, pageNumber, students]"]